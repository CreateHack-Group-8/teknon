version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: vulnerability_platform_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: vulnerability_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - vulnerability_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vulnerability_platform_api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/vulnerability_platform
      JWT_SECRET: your_jwt_secret_here_change_in_production
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./src:/app/src
      - ./prisma:/app/prisma
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
    networks:
      - vulnerability_network
    command: >
      sh -c "
        npm run prisma:generate &&
        npm run prisma:migrate &&
        npm run prisma:seed &&
        npm start
      "

  # Prisma Studio (Optional - for database management)
  prisma-studio:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vulnerability_platform_studio
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/vulnerability_platform
    ports:
      - "5555:5555"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./prisma:/app/prisma
      - ./package.json:/app/package.json
      - ./package-lock.json:/app/package-lock.json
    networks:
      - vulnerability_network
    command: >
      sh -c "
        npm run prisma:generate &&
        npm run prisma:studio
      "
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local

networks:
  vulnerability_network:
    driver: bridge
